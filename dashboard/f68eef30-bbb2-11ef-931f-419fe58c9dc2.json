{
  "entityType" : "DASHBOARD",
  "entity" : {
    "assignedCustomers" : [ ],
    "configuration" : {
      "description" : "This is Remizov Kirill, Zaxarov Gleb and Terehov Dmitriy yeared work for IOT",
      "widgets" : {
        "c156af2b-4742-5765-bd15-3bf5db2c2bdc" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <div class=\"house-card\">\n        <div class=\"house-icon\">\n            <i class=\"fas fa-home\"></i>\n        </div>\n        <div class=\"house-details\">\n            <h2>Мой участок</h2>\n            <p>2 Спальни, 2 Санузла</p>\n            <p>1500 метров квадратных</p>\n        </div>\n    </div>",
              "cardCss" : ".house-card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    width: 400px;\n    margin: 20px;\n    display: flex;\n    align-items: center;\n}\n\n.house-icon {\n    font-size: 100px;\n    color: #007BFF;\n    padding: 20px;\n    flex: 1;\n    text-align: center;\n}\n\n.house-details {\n    padding: 20px;\n    flex: 2;\n    text-align: left;\n}\n\n.house-details h2 {\n    margin: 0 0 10px;\n    font-size: 1.5em;\n}\n\n.house-details p {\n    margin: 5px 0;\n    font-size: 1em;\n    color: #555;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true,
            "actions" : {
              "elementClick" : [ ],
              "headerButton" : [ {
                "name" : "element_click",
                "icon" : "arrow_forward",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "land_details",
                "setEntityId" : false,
                "stateEntityParamName" : null,
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "5c51c965-b1cb-c40e-159d-8dc2051e82d3"
              } ]
            }
          },
          "row" : 0,
          "col" : 0,
          "id" : "c156af2b-4742-5765-bd15-3bf5db2c2bdc"
        },
        "c4d18085-1671-0d56-51a8-d13bcbab5785" : {
          "typeFullFqn" : "system.cards.entities_hierarchy",
          "type" : "latest",
          "sizeX" : 7.5,
          "sizeY" : 3.5,
          "config" : {
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 86400000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1733767300884,
                  "endTimeMs" : 1733853700884
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "nodeRelationQueryFunction" : "var entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"FROM\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n/**\n\n// Function should return relations query object for current node used to fetch entity children.\n// Function can return 'default' string value. In this case default relations query will be used.\n\n// The following example code will construct simple relations query that will fetch relations of type 'Contains'\n// from the current entity.\n\nvar entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: \"FROM\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n**/\n",
              "nodeHasChildrenFunction" : "/**\n\n// Function should return boolean value indicating whether current node has children (whether it can be expanded).\n\n// The following example code will restrict entities hierarchy expansion up to third level.\n\nreturn nodeCtx.level <= 2;\n\n// The next example code will restrict entities expansion according to the value of example 'nodeHasChildren' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeHasChildren') && data['nodeHasChildren'] !== null) {\n    return data['nodeHasChildren'] === 'true';\n} else {\n    return true;\n}\n  \n**/\n ",
              "nodeOpenedFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be opened (expanded) when it first loaded.\n\n// The following example code will open by default nodes up to third level.\n\nreturn nodeCtx.level <= 2;\n\n**/\n ",
              "nodeDisabledFunction" : "/**\n\n// Function should return boolean value indicating whether current node should be disabled (not selectable).\n\n// The following example code will disable current node according to the value of example 'nodeDisabled' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeDisabled') && data['nodeDisabled'] !== null) {\n    return data['nodeDisabled'] === 'true';\n} else {\n    return false;\n}\n  \n**/\n",
              "nodeIconFunction" : "/** \n\n// Function should return node icon info object.\n// Resulting object should contain either 'materialIcon' or 'iconUrl' property. \n// Where:\n    - 'materialIcon' - name of the material icon to be used from the Material Icons Library (https://material.io/tools/icons);\n    - 'iconUrl' - url of the external image to be used as node icon.\n// Function can return 'default' string value. In this case default icons according to entity type will be used.\n\n// The following example code shows how to use external image for devices which name starts with 'Test' and use \n// default icons for the rest of entities.\n\nvar entity = nodeCtx.entity;\nif (entity.id.entityType === 'DEVICE' && entity.name.startsWith('Test')) {\n    return {iconUrl: 'https://avatars1.githubusercontent.com/u/14793288?v=4&s=117'};\n} else {\n    return 'default';\n}\n \n**/",
              "nodeTextFunction" : "/**\n\n// Function should return text (can be HTML code) for the current node.\n\n// The following example code will generate node text consisting of entity name and temperature if temperature value is present in entity attributes/timeseries.\n\nvar data =  nodeCtx.data;\nvar entity = nodeCtx.entity;\nvar text = entity.name;\nif (data.hasOwnProperty('temperature') && data['temperature'] !== null) {\n    text += \" <b>\"+ data['temperature'] +\" °C</b>\";\n}\nreturn text;\n\n**/",
              "nodesSortFunction" : "/**\n\n// This function is used to sort nodes of the same level. Function should compare two nodes and return \n// integer value: \n//     - less than 0 - sort nodeCtx1 to an index lower than nodeCtx2\n//     - 0 - leave nodeCtx1 and nodeCtx2 unchanged with respect to each other\n//     - greater than 0 - sort nodeCtx2 to an index lower than nodeCtx1\n\n// The following example code will sort entities first by entity type in alphabetical order then\n// by entity name in alphabetical order.\n\nvar result = nodeCtx1.entity.id.entityType.localeCompare(nodeCtx2.entity.id.entityType);\nif (result === 0) {\n    result = nodeCtx1.entity.name.localeCompare(nodeCtx2.entity.name);\n}\nreturn result;\n  \n**/"
            },
            "title" : "Entities hierarchy",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "datasources" : [ {
              "type" : "entity",
              "name" : "",
              "entityAliasId" : "5bc37b5c-07a6-be2b-b639-455dbc8cc0bf",
              "dataKeys" : [ ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "widgetStyle" : { },
            "actions" : {
              "nodeSelected" : [ {
                "name" : "KottelRomm",
                "icon" : "more_horiz",
                "useShowWidgetActionFunction" : null,
                "showWidgetActionFunction" : "return true;",
                "type" : "openDashboardState",
                "targetDashboardStateId" : "cotelroom",
                "setEntityId" : true,
                "stateEntityParamName" : "Котельная",
                "openRightLayout" : false,
                "openInSeparateDialog" : false,
                "openInPopover" : false,
                "id" : "d886d38a-d61b-efa9-2f01-5b8dcddd09e7"
              } ]
            },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "c4d18085-1671-0d56-51a8-d13bcbab5785"
        },
        "386ba2d7-1671-e5c2-2e44-0265dd905915" : {
          "typeFullFqn" : "system.digital_gauges.digital_thermometer",
          "type" : "latest",
          "sizeX" : 3,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "device",
              "name" : "",
              "deviceId" : "b18dc4f0-b7d5-11ef-8f6c-5527dbecb4b6",
              "dataKeys" : [ {
                "name" : "Temperature",
                "type" : "timeseries",
                "label" : "Temperature",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.48504205724643845
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1733990332611,
                  "endTimeMs" : 1734076732611
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#000000",
            "color" : "rgba(255, 254, 254, 0.87)",
            "padding" : "0px",
            "settings" : {
              "maxValue" : 60,
              "donutStartAngle" : 90,
              "showValue" : true,
              "showMinMax" : true,
              "gaugeWidthScale" : 1,
              "levelColors" : [ "#304ffe", "#7e57c2", "#ff4081", "#d32f2f" ],
              "titleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "style" : "normal",
                "weight" : "500"
              },
              "labelFont" : {
                "family" : "Roboto",
                "size" : 8,
                "style" : "normal",
                "weight" : "500"
              },
              "valueFont" : {
                "family" : "Segment7Standard",
                "style" : "normal",
                "weight" : "500",
                "size" : 18
              },
              "minMaxFont" : {
                "family" : "Segment7Standard",
                "size" : 12,
                "style" : "normal",
                "weight" : "500"
              },
              "dashThickness" : 1.5,
              "minValue" : -60,
              "gaugeColor" : "#333333",
              "neonGlowBrightness" : 35,
              "gaugeType" : "donut",
              "animation" : true,
              "animationDuration" : 500,
              "animationRule" : "linear"
            },
            "title" : "Digital thermometer",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "widgetStyle" : { },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "386ba2d7-1671-e5c2-2e44-0265dd905915"
        },
        "0d003da3-4f3e-1e26-66bf-189b56d3fe7f" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : " <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <div class=\"temperature-card\">\n        <div class=\"thermometer-icon\">\n            <i class=\"fas fa-thermometer-half\"></i>\n        </div>\n        <div class=\"temperature-details\">\n            <h2>Температура в доме</h2>\n        </div>\n    </div>",
              "cardCss" : ".temperature-card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    width: 250px;\n    height: 150px;\n    display: flex;\n    align-items: center;\n}\n\n.thermometer-icon {\n    font-size: 50px;\n    color: #007BFF;;\n    flex: 1;\n    text-align: center;\n}\n\n.temperature-details {\n    flex: 2;\n    text-align: left;\n}\n\n.temperature-details h2 {\n    margin: 0;\n    font-size: 1em;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "0d003da3-4f3e-1e26-66bf-189b56d3fe7f"
        },
        "b176f570-3925-0ff7-8222-e2bb0de5a89b" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : " <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <div class=\"temperature-card\">\n        <div class=\"thermometer-icon\">\n            <i class=\"fas fa-thermometer-half\"></i>\n        </div>\n        <div class=\"temperature-details\">\n            <h2>Температура в Бане</h2>\n        </div>\n    </div>",
              "cardCss" : ".temperature-card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    width: 250px;\n    height: 150px;\n    display: flex;\n    align-items: center;\n}\n\n.thermometer-icon {\n    font-size: 50px;\n    color: #007BFF;;\n    flex: 1;\n    text-align: center;\n}\n\n.temperature-details {\n    flex: 2;\n    text-align: left;\n}\n\n.temperature-details h2 {\n    margin: 0;\n    font-size: 1em;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "b176f570-3925-0ff7-8222-e2bb0de5a89b"
        },
        "9423809a-ed69-ff30-c17e-2980626902ac" : {
          "typeFullFqn" : "system.digital_gauges.digital_thermometer",
          "type" : "latest",
          "sizeX" : 3,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "device",
              "name" : "",
              "deviceId" : "0262b650-b7d7-11ef-8f6c-5527dbecb4b6",
              "dataKeys" : [ {
                "name" : "Temperature",
                "type" : "timeseries",
                "label" : "Temperature",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.3368685992222866
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            } ],
            "timewindow" : {
              "displayValue" : "",
              "selectedTab" : 0,
              "realtime" : {
                "realtimeType" : 1,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "quickInterval" : "CURRENT_DAY"
              },
              "history" : {
                "historyType" : 0,
                "interval" : 1000,
                "timewindowMs" : 60000,
                "fixedTimewindow" : {
                  "startTimeMs" : 1733990824921,
                  "endTimeMs" : 1734077224921
                },
                "quickInterval" : "CURRENT_DAY"
              },
              "aggregation" : {
                "type" : "AVG",
                "limit" : 25000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "#000000",
            "color" : "rgba(255, 254, 254, 0.87)",
            "padding" : "0px",
            "settings" : {
              "maxValue" : 60,
              "donutStartAngle" : 90,
              "showValue" : true,
              "showMinMax" : true,
              "gaugeWidthScale" : 1,
              "levelColors" : [ "#304ffe", "#7e57c2", "#ff4081", "#d32f2f" ],
              "titleFont" : {
                "family" : "Roboto",
                "size" : 12,
                "style" : "normal",
                "weight" : "500"
              },
              "labelFont" : {
                "family" : "Roboto",
                "size" : 8,
                "style" : "normal",
                "weight" : "500"
              },
              "valueFont" : {
                "family" : "Segment7Standard",
                "style" : "normal",
                "weight" : "500",
                "size" : 18
              },
              "minMaxFont" : {
                "family" : "Segment7Standard",
                "size" : 12,
                "style" : "normal",
                "weight" : "500"
              },
              "dashThickness" : 1.5,
              "minValue" : -60,
              "gaugeColor" : "#333333",
              "neonGlowBrightness" : 35,
              "gaugeType" : "donut",
              "animation" : true,
              "animationDuration" : 500,
              "animationRule" : "linear"
            },
            "title" : "Digital thermometer",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400
            },
            "widgetStyle" : { },
            "useDashboardTimewindow" : true,
            "showLegend" : false,
            "actions" : { },
            "displayTimewindow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "9423809a-ed69-ff30-c17e-2980626902ac"
        },
        "0d4c8796-dc81-af3d-82a2-bc8071da6b16" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : " <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <div class=\"temperature-card\">\n        <div class=\"thermometer-icon\">\n            <i class=\"fas fa-fire\"></i>\n        </div>\n        <div class=\"temperature-details\">\n            <h2>Счетчик газа в доме</h2>\n        </div>\n    </div>",
              "cardCss" : ".temperature-card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    width: 250px;\n    height: 150px;\n    display: flex;\n    align-items: center;\n}\n\n.thermometer-icon {\n    font-size: 50px;\n    color: #007BFF;;\n    flex: 1;\n    text-align: center;\n}\n\n.temperature-details {\n    flex: 2;\n    text-align: left;\n}\n\n.temperature-details h2 {\n    margin: 0;\n    font-size: 1em;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "0d4c8796-dc81-af3d-82a2-bc8071da6b16"
        },
        "1bbc472c-0578-e57e-a397-7566f55838a8" : {
          "typeFullFqn" : "system.cards.html_card",
          "type" : "static",
          "sizeX" : 7.5,
          "sizeY" : 3,
          "config" : {
            "datasources" : [ {
              "type" : "static",
              "name" : "function",
              "dataKeys" : [ {
                "name" : "f(x)",
                "type" : "function",
                "label" : "Random",
                "color" : "#2196f3",
                "settings" : { },
                "_hash" : 0.15479322438769105,
                "funcBody" : "var value = prevValue + Math.random() * 100 - 50;\nvar multiplier = Math.pow(10, 2 || 0);\nvar value = Math.round(value * multiplier) / multiplier;\nif (value < -1000) {\n\tvalue = -1000;\n} else if (value > 1000) {\n\tvalue = 1000;\n}\nreturn value;"
              } ]
            } ],
            "timewindow" : {
              "realtime" : {
                "timewindowMs" : 60000
              }
            },
            "showTitle" : false,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "8px",
            "settings" : {
              "cardHtml" : " <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <div class=\"temperature-card\">\n        <div class=\"thermometer-icon\">\n            <i class=\"fas fa-fire\"></i>\n        </div>\n        <div class=\"temperature-details\">\n            <h2>Счетчик Газа в Бане</h2>\n        </div>\n    </div>",
              "cardCss" : ".temperature-card {\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    width: 250px;\n    height: 150px;\n    display: flex;\n    align-items: center;\n}\n\n.thermometer-icon {\n    font-size: 50px;\n    color: #007BFF;;\n    flex: 1;\n    text-align: center;\n}\n\n.temperature-details {\n    flex: 2;\n    text-align: left;\n}\n\n.temperature-details h2 {\n    margin: 0;\n    font-size: 1em;\n}"
            },
            "title" : "HTML Card",
            "dropShadow" : true
          },
          "row" : 0,
          "col" : 0,
          "id" : "1bbc472c-0578-e57e-a397-7566f55838a8"
        },
        "b403b342-293b-5a8d-72ee-85f154d2fae3" : {
          "typeFullFqn" : "system.alarm_widgets.alarms_table",
          "type" : "alarm",
          "sizeX" : 10.5,
          "sizeY" : 6.5,
          "config" : {
            "timewindow" : {
              "realtime" : {
                "interval" : 1000,
                "timewindowMs" : 86400000
              },
              "aggregation" : {
                "type" : "NONE",
                "limit" : 200
              }
            },
            "showTitle" : true,
            "backgroundColor" : "rgb(255, 255, 255)",
            "color" : "rgba(0, 0, 0, 0.87)",
            "padding" : "4px",
            "settings" : {
              "enableSelection" : true,
              "enableSearch" : true,
              "displayDetails" : true,
              "allowAcknowledgment" : true,
              "allowClear" : true,
              "allowAssign" : true,
              "displayActivity" : true,
              "displayPagination" : true,
              "defaultPageSize" : 10,
              "defaultSortOrder" : "-createdTime",
              "enableSelectColumnDisplay" : true,
              "enableStickyAction" : false,
              "enableFilter" : true,
              "entitiesTitle" : null,
              "alarmsTitle" : "Alarms"
            },
            "title" : "Alarms table",
            "dropShadow" : true,
            "enableFullscreen" : true,
            "titleStyle" : {
              "fontSize" : "16px",
              "fontWeight" : 400,
              "padding" : "5px 10px 5px 10px"
            },
            "useDashboardTimewindow" : false,
            "showLegend" : false,
            "alarmSource" : {
              "type" : "device",
              "name" : "",
              "deviceId" : "9f108010-bbb8-11ef-931f-419fe58c9dc2",
              "entityAliasId" : null,
              "dataKeys" : [ {
                "name" : "createdTime",
                "type" : "alarm",
                "label" : "Created time",
                "color" : "#2196f3",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.021092237451093787,
                "funcBody" : null
              }, {
                "name" : "originator",
                "type" : "alarm",
                "label" : "Originator",
                "color" : "#4caf50",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.2780007688856758,
                "funcBody" : null
              }, {
                "name" : "type",
                "type" : "alarm",
                "label" : "Type",
                "color" : "#f44336",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.7323586880398418,
                "funcBody" : null
              }, {
                "name" : "severity",
                "type" : "alarm",
                "label" : "Severity",
                "color" : "#ffc107",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "useCellContentFunction" : false
                },
                "_hash" : 0.09927019860088193,
                "funcBody" : null
              }, {
                "name" : "status",
                "type" : "alarm",
                "label" : "Status",
                "color" : "#607d8b",
                "settings" : {
                  "useCellStyleFunction" : false,
                  "cellStyleFunction" : "",
                  "useCellContentFunction" : false,
                  "cellContentFunction" : ""
                },
                "_hash" : 0.6588418951443418,
                "funcBody" : null
              }, {
                "name" : "assignee",
                "type" : "alarm",
                "label" : "Assignee",
                "color" : "#9c27b0",
                "settings" : { },
                "_hash" : 0.5008441077416634,
                "funcBody" : null
              } ],
              "alarmFilterConfig" : {
                "statusList" : [ "ACTIVE" ]
              }
            },
            "alarmsPollingInterval" : 5,
            "showTitleIcon" : false,
            "titleIcon" : "warning",
            "iconColor" : "rgba(0, 0, 0, 0.87)",
            "iconSize" : "24px",
            "titleTooltip" : "",
            "widgetStyle" : { },
            "displayTimewindow" : true,
            "actions" : { },
            "configMode" : "basic",
            "alarmFilterConfig" : {
              "statusList" : [ ],
              "severityList" : [ ],
              "typeList" : [ ],
              "searchPropagatedAlarms" : false
            },
            "datasources" : [ ],
            "titleFont" : null,
            "titleColor" : null
          },
          "row" : 0,
          "col" : 0,
          "id" : "b403b342-293b-5a8d-72ee-85f154d2fae3"
        }
      },
      "states" : {
        "default" : {
          "name" : "Yeared_work_Dashbord",
          "root" : true,
          "layouts" : {
            "main" : {
              "widgets" : {
                "c156af2b-4742-5765-bd15-3bf5db2c2bdc" : {
                  "sizeX" : 8,
                  "sizeY" : 4,
                  "row" : 0,
                  "col" : 0
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        },
        "land_details" : {
          "name" : "My Land",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : {
                "c4d18085-1671-0d56-51a8-d13bcbab5785" : {
                  "sizeX" : 9,
                  "sizeY" : 16,
                  "row" : 0,
                  "col" : 0
                },
                "386ba2d7-1671-e5c2-2e44-0265dd905915" : {
                  "sizeX" : 3,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 16
                },
                "0d003da3-4f3e-1e26-66bf-189b56d3fe7f" : {
                  "sizeX" : 5,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 11
                },
                "b176f570-3925-0ff7-8222-e2bb0de5a89b" : {
                  "sizeX" : 5,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 11
                },
                "9423809a-ed69-ff30-c17e-2980626902ac" : {
                  "sizeX" : 3,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 16
                },
                "0d4c8796-dc81-af3d-82a2-bc8071da6b16" : {
                  "sizeX" : 5,
                  "sizeY" : 3,
                  "row" : 0,
                  "col" : 19
                },
                "1bbc472c-0578-e57e-a397-7566f55838a8" : {
                  "sizeX" : 5,
                  "sizeY" : 3,
                  "row" : 3,
                  "col" : 19
                },
                "b403b342-293b-5a8d-72ee-85f154d2fae3" : {
                  "sizeX" : 10,
                  "sizeY" : 8,
                  "row" : 6,
                  "col" : 11
                }
              },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        },
        "cotelroom" : {
          "name" : "cotelRoom",
          "root" : false,
          "layouts" : {
            "main" : {
              "widgets" : { },
              "gridSettings" : {
                "backgroundColor" : "#eeeeee",
                "columns" : 24,
                "margin" : 10,
                "outerMargin" : true,
                "backgroundSizeMode" : "100%"
              }
            }
          }
        }
      },
      "entityAliases" : {
        "5bc37b5c-07a6-be2b-b639-455dbc8cc0bf" : {
          "id" : "5bc37b5c-07a6-be2b-b639-455dbc8cc0bf",
          "alias" : "Мой участок",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "ASSET",
              "id" : "b620c430-b71d-11ef-a130-616cb502e45a"
            }
          }
        },
        "0ea55084-e4a9-b270-a47f-3b128a958c2e" : {
          "id" : "0ea55084-e4a9-b270-a47f-3b128a958c2e",
          "alias" : "ДТД",
          "filter" : {
            "type" : "singleEntity",
            "resolveMultiple" : false,
            "singleEntity" : {
              "entityType" : "DEVICE",
              "id" : "b18dc4f0-b7d5-11ef-8f6c-5527dbecb4b6"
            }
          }
        }
      },
      "filters" : { },
      "timewindow" : {
        "displayValue" : "",
        "hideInterval" : false,
        "hideLastInterval" : false,
        "hideQuickInterval" : false,
        "hideAggregation" : false,
        "hideAggInterval" : false,
        "hideTimezone" : false,
        "selectedTab" : 0,
        "realtime" : {
          "realtimeType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "quickInterval" : "CURRENT_DAY"
        },
        "history" : {
          "historyType" : 0,
          "interval" : 1000,
          "timewindowMs" : 60000,
          "fixedTimewindow" : {
            "startTimeMs" : 1733669972066,
            "endTimeMs" : 1733756372066
          },
          "quickInterval" : "CURRENT_DAY"
        },
        "aggregation" : {
          "type" : "AVG",
          "limit" : 25000
        }
      },
      "settings" : {
        "stateControllerId" : "entity",
        "showTitle" : false,
        "showDashboardsSelect" : true,
        "showEntitiesSelect" : true,
        "showDashboardTimewindow" : true,
        "showDashboardExport" : true,
        "toolbarAlwaysOpen" : true
      }
    },
    "externalId" : {
      "entityType" : "DASHBOARD",
      "id" : "f68eef30-bbb2-11ef-931f-419fe58c9dc2"
    },
    "id" : {
      "entityType" : "DASHBOARD",
      "id" : "f68eef30-bbb2-11ef-931f-419fe58c9dc2"
    },
    "image" : "tb-image;https://lh5.googleusercontent.com/proxy/6iVeGSTgPaSDC7NbNBI2-E-H54yAsGOoyWEez8KmGKwGk8LZT5n4J3jSCu3_LkLSwSGapjUDBXl-bjPFxkjTtVt2WnV5wBCsblvdBScVRZS5kHeKayfWnn0Ero9ueG78SIx6z4YCFMqNWg",
    "mobileHide" : false,
    "mobileOrder" : null,
    "name" : "Yeared_work_Dashbord",
    "title" : "Yeared_work_Dashbord"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}